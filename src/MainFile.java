/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.util.*;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.StyledDocument;
/**
 *
 * @author Edwin Clement
 */
public class MainFile extends javax.swing.JFrame {
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	// My stuff
    Customer tempCustomer;
    ItemsList itemList;
    CustomerList customerList;
    static String casual;
    static double totalPrice;
    /**
     * Creates new form MainInterface
     */
    public MainFile() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({ "deprecation" })
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainWindow = new javax.swing.JFrame();
        Paymentselect = new javax.swing.ButtonGroup();
        ItemSelectionPanel = new javax.swing.JPanel();
        ItemNameInput = new javax.swing.JTextField();
        ItemQuantityInput = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        ItemPrediction = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        AddToList = new javax.swing.JButton();
        BarCodeInput = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        CustomerEntryPanel = new javax.swing.JPanel();
        NextCustomer = new javax.swing.JButton();
        CustomerNameInput = new javax.swing.JTextField();
        BecomePremium = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        CustomerNameOptions = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        PremiumCustomerInfo = new javax.swing.JTextPane();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ItemsBought = new javax.swing.JTable();
        DeleteItem = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        ForCash1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        TotalPriceForCash = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        CashInputForCash = new javax.swing.JTextField();
        BalanceForCash = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        CashStillRequiredForPoints = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        CashInputForPoints = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        BalanceForPoints = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        Confirmation = new javax.swing.JLabel();

        javax.swing.GroupLayout MainWindowLayout = new javax.swing.GroupLayout(MainWindow.getContentPane());
        MainWindow.getContentPane().setLayout(MainWindowLayout);
        MainWindowLayout.setHorizontalGroup(
            MainWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        MainWindowLayout.setVerticalGroup(
            MainWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ItemSelectionPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));

        ItemNameInput.setNextFocusableComponent(ItemQuantityInput);
        ItemNameInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ItemNameInputKeyReleased(evt);
            }
        });

        ItemQuantityInput.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ItemQuantityInput.setText("1");
        ItemQuantityInput.setNextFocusableComponent(AddToList);
        ItemQuantityInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ItemQuantityInputFocusGained(evt);
            }
        });

        ItemPrediction.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        ItemPrediction.setModel(new javax.swing.AbstractListModel<String>() {
            /**
			 * 
			 */
			private static final long serialVersionUID = 1L;
			String[] strings = { };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(ItemPrediction);

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setText("Select All Items");

        AddToList.setText("Add To List");
        AddToList.setNextFocusableComponent(ItemNameInput);
        AddToList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddToListActionPerformed(evt);
            }
        });

        BarCodeInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        BarCodeInput.setNextFocusableComponent(ItemQuantityInput);
        BarCodeInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                BarCodeInputKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel5.setText("Enter Bar Code:");

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel7.setText("Enter Item Name");

        jLabel8.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel8.setText("Enter Quantity");

        jLabel10.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel10.setText("List Of Matching Possible Items");

        javax.swing.GroupLayout ItemSelectionPanelLayout = new javax.swing.GroupLayout(ItemSelectionPanel);
        ItemSelectionPanel.setLayout(ItemSelectionPanelLayout);
        ItemSelectionPanelLayout.setHorizontalGroup(
            ItemSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ItemSelectionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ItemSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ItemSelectionPanelLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(ItemSelectionPanelLayout.createSequentialGroup()
                        .addGroup(ItemSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BarCodeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ItemSelectionPanelLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel5)))
                        .addGroup(ItemSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ItemSelectionPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ItemNameInput))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ItemSelectionPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addGap(111, 111, 111))))
                    .addGroup(ItemSelectionPanelLayout.createSequentialGroup()
                        .addGroup(ItemSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ItemQuantityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ItemSelectionPanelLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AddToList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(ItemSelectionPanelLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ItemSelectionPanelLayout.setVerticalGroup(
            ItemSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ItemSelectionPanelLayout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ItemSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ItemSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BarCodeInput)
                    .addComponent(ItemNameInput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ItemSelectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ItemSelectionPanelLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ItemQuantityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(AddToList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        CustomerEntryPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));

        NextCustomer.setText("Next Customer");
        NextCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextCustomerActionPerformed(evt);
            }
        });

        CustomerNameInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CustomerNameInputKeyReleased(evt);
            }
        });

        BecomePremium.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        BecomePremium.setText("Become Premium!!");
        BecomePremium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BecomePremiumActionPerformed(evt);
            }
        });

        CustomerNameOptions.setModel(new javax.swing.AbstractListModel<String>() {
            /**
			 * 
			 */
			private static final long serialVersionUID = 1L;
			String[] strings = {  };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        CustomerNameOptions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustomerNameOptionsMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CustomerNameOptionsMouseExited(evt);
            }
        });
        jScrollPane3.setViewportView(CustomerNameOptions);

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setText("List of Matching Premium Customers");

        PremiumCustomerInfo.setFocusable(false);
        jScrollPane4.setViewportView(PremiumCustomerInfo);

        jLabel11.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel11.setText("Enter The Name For a Premium Customer");

        javax.swing.GroupLayout CustomerEntryPanelLayout = new javax.swing.GroupLayout(CustomerEntryPanel);
        CustomerEntryPanel.setLayout(CustomerEntryPanelLayout);
        CustomerEntryPanelLayout.setHorizontalGroup(
            CustomerEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustomerEntryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CustomerEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CustomerEntryPanelLayout.createSequentialGroup()
                        .addComponent(NextCustomer)
                        .addGroup(CustomerEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CustomerEntryPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(CustomerNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CustomerEntryPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11)
                                .addGap(58, 58, 58))))
                    .addGroup(CustomerEntryPanelLayout.createSequentialGroup()
                        .addGroup(CustomerEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CustomerEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BecomePremium, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4))))
                .addContainerGap())
        );
        CustomerEntryPanelLayout.setVerticalGroup(
            CustomerEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustomerEntryPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(CustomerEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(NextCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CustomerEntryPanelLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CustomerNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CustomerEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(CustomerEntryPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BecomePremium, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("List of Items Bought");
        jLabel1.setToolTipText("");

        ItemsBought.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bar Code", "Itemname", "Price", "Quantity", "Sub Total"
            }
        ) {
            /**
			 * 
			 */
			private static final long serialVersionUID = 1L;
			@SuppressWarnings("rawtypes")
			Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class<?> getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ItemsBought.setColumnSelectionAllowed(true);
        ItemsBought.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(ItemsBought);
        ItemsBought.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (ItemsBought.getColumnModel().getColumnCount() > 0) {
            ItemsBought.getColumnModel().getColumn(0).setResizable(false);
            ItemsBought.getColumnModel().getColumn(1).setResizable(false);
            ItemsBought.getColumnModel().getColumn(2).setResizable(false);
            ItemsBought.getColumnModel().getColumn(3).setResizable(false);
            ItemsBought.getColumnModel().getColumn(4).setResizable(false);
        }

        DeleteItem.setText("Delete Item");
        DeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(DeleteItem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        ForCash1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ForCash1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel6.setText("Total Price::");

        TotalPriceForCash.setText("-");

        jLabel9.setText("From Customer");

        CashInputForCash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CashInputForCashKeyReleased(evt);
            }
        });

        BalanceForCash.setText("-");

        jLabel14.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel14.setText("For Cash");

        jLabel18.setText("Balance");

        jButton1.setText("Finalize");

        javax.swing.GroupLayout ForCash1Layout = new javax.swing.GroupLayout(ForCash1);
        ForCash1.setLayout(ForCash1Layout);
        ForCash1Layout.setHorizontalGroup(
            ForCash1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ForCash1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ForCash1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ForCash1Layout.createSequentialGroup()
                        .addGroup(ForCash1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel18)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(ForCash1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BalanceForCash, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CashInputForCash, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TotalPriceForCash, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel14))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        ForCash1Layout.setVerticalGroup(
            ForCash1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ForCash1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ForCash1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ForCash1Layout.createSequentialGroup()
                        .addGroup(ForCash1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TotalPriceForCash)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ForCash1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(CashInputForCash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ForCash1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BalanceForCash)
                            .addComponent(jLabel18)))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cash", ForCash1);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setPreferredSize(new java.awt.Dimension(398, 135));

        jLabel16.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel16.setText("For Card");

        jLabel19.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        jLabel19.setText("Swipe Card...");

        jButton2.setText("Finalize");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addGap(13, 13, 13)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Card", jPanel4);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setPreferredSize(new java.awt.Dimension(398, 135));

        jLabel20.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel20.setText("For Cash + Points");

        jLabel21.setText("Cash req. after points");

        CashStillRequiredForPoints.setText("-");

        jLabel22.setText("From Customer");

        jLabel23.setText("Balance");

        BalanceForPoints.setText("-");

        jButton3.setText("Finalize");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CashInputForPoints, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(BalanceForPoints, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(CashStillRequiredForPoints, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CashStillRequiredForPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CashInputForPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BalanceForPoints))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );

        jTabbedPane1.addTab("Points + Cash", jPanel5);

        Confirmation.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        Confirmation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Confirmation.setText("  Processing...");
        Confirmation.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ItemSelectionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CustomerEntryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1)
                    .addComponent(Confirmation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Confirmation, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CustomerEntryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ItemSelectionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NextCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextCustomerActionPerformed
        // For getting ready to take in a new customer.
        blankOutForNewCustomer();
    }//GEN-LAST:event_NextCustomerActionPerformed

    private void AddToListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddToListActionPerformed
        // for Adding to the List
        
        DefaultTableModel dTable = (DefaultTableModel) ItemsBought.getModel();
        
        
        @SuppressWarnings("rawtypes")
		Vector<Comparable> rowData = new Vector<Comparable>();        
        // Getting the bar code of the Item from the list
        String itemString = ItemPrediction.getSelectedValue();
        
        if(itemString != null)  {
            String barCode = itemString.split(":")[0].trim();

            // finding the element which has that bar code
            Item it = itemList.getItemListFromBarCode(barCode).firstElement();

            int num = Integer.parseInt(ItemQuantityInput.getText());
            
            rowData.add(it.getBarCodeStringId());
            rowData.add(it.getName());
            rowData.add(it.getPrice());

            rowData.add(num);
            rowData.add(num * it.getPrice());

//            int prevNum, foundIndex = 0;
//            Vector foundItem;
//            // **REAAALLLLY** Shouldn't do this, but meh. Don't have enough time.
//            boolean foundFlag = false;
//            Vector<Vector<Object>> dataVector = dTable.getDataVector();
//            for (Vector item : dataVector) {
//                foundFlag = false;
//                if (item.elementAt(0).equals(it.getBarCodeStringId())) {
//                    prevNum = (int) item.elementAt(3);
//
//                    foundFlag = true; // rejoice, Halleluiah
//                    System.out.println(item);
//                    foundItem = item;
//                    break;
//                }
//                foundIndex++;
//            }
//
//            if (foundFlag) {
//                // Remove the prev row
//                dTable.removeRow(foundIndex);
//
//                // updating the quantity
//                rowData.insertElementAt(3, num + prevNum);
//                rowData.removeElementAt(3);
//                rowData.insertElementAt(4, (int) ((prevNum + num) * it.getPrice()));
//                rowData.removeElementAt(4);
//            }

            dTable.addRow(rowData);

            updateSinceTotalAmountChanged();
        } else {
            // No item in the List, mostly becoz garbage in the input fields.
            // Ignore this case. Might Need it later..
        }
        ItemNameInput.requestFocusInWindow();

        // Reiniting the Item Selector.
        BarCodeInput.setText("");
        ItemNameInput.setText("");
        ItemQuantityInput.setText("1");
        // Load all the Items and Display them in the 
        // ItemPrediction List
        DefaultListModel<String> itemPredictionListModel = new DefaultListModel<String>();
        // Getting the available Items list from ItemsList.yeah its a vector. Sue me.
        itemList = new ItemsList();
        int i = 0;
        for (Item tempItem : itemList.getList()) {
            itemPredictionListModel.add(i++, tempItem.getConcise());
        }
        ItemPrediction.setModel(itemPredictionListModel);
        ItemPrediction.setSelectedIndex(0);
    }//GEN-LAST:event_AddToListActionPerformed

    private void ItemQuantityInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemQuantityInputFocusGained
        // For easy Modification
        ItemQuantityInput.selectAll();
    }//GEN-LAST:event_ItemQuantityInputFocusGained

    private void ItemNameInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ItemNameInputKeyReleased
        String inp = ItemNameInput.getText();

        // Display in the ItemPrediction List
        DefaultListModel<String> itemPredictionListModel = new DefaultListModel<String>();
        // Getting the available Items list from ItemsList.yeah its a vector. Sue me.

        int i = 0;
        
        for (Item tempItem : itemList.getItemListFromName(inp)) {
            itemPredictionListModel.add(i++, tempItem.getConcise());
        }
        ItemPrediction.setModel(itemPredictionListModel);
        ItemPrediction.setSelectedIndex(0);

    }//GEN-LAST:event_ItemNameInputKeyReleased

    private void BarCodeInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BarCodeInputKeyReleased
        // for any change in the input, read through the entire list and make
        // appropriate changes in the list.
        String inp = BarCodeInput.getText();
        
        // Display in the ItemPrediction List
        DefaultListModel<String> itemPredictionListModel = new DefaultListModel<String>();
        // Getting the available Items list from ItemsList.yeah its a vector. Sue me.

        int i = 0;
        for (Item tempItem : itemList.getItemListFromBarCode(inp)) {
            itemPredictionListModel.add(i++, tempItem.getConcise());
        }
        ItemPrediction.setModel(itemPredictionListModel);
        ItemPrediction.setSelectedIndex(0);

    }//GEN-LAST:event_BarCodeInputKeyReleased

    private void DeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteItemActionPerformed
        // For Deleting the Row of Item
        DefaultTableModel dTable = (DefaultTableModel) ItemsBought.getModel();

        while (ItemsBought.getSelectedRow() != -1) {
            // remove selected row from the model
            dTable.removeRow(ItemsBought.getSelectedRow());
        }
        
        updateSinceTotalAmountChanged();
    }//GEN-LAST:event_DeleteItemActionPerformed

    private void BecomePremiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BecomePremiumActionPerformed
        String str =CustomerNameInput.getText();
        if(!str.equals(""))
        {
            String s="Do you want "+str+" to become Premium Customer ? ";
        int n=JOptionPane.showConfirmDialog(null,s , "Conformation", JOptionPane.YES_NO_OPTION);
            //System.out.println("debug "+str);
        if(n==0)
        {
            tempCustomer=new PremiumCustomer(str);
            customerList=new CustomerList();
            customerList.addCustomer((PremiumCustomer)tempCustomer);
            customerList.saveData();
            customerList.loadData();
            
            try
            {
                PremiumCustomerInfo.setText("");
                StyledDocument doc=PremiumCustomerInfo.getStyledDocument();

                doc.insertString(0, ((PremiumCustomer)tempCustomer).getFormatedDetail(), null);
                
            }catch(Exception e)
            {
                
                   
            }
        }
        }
    }//GEN-LAST:event_BecomePremiumActionPerformed

    private void CustomerNameInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustomerNameInputKeyReleased
        // TODO add your handling code here:
        String inp = CustomerNameInput.getText();
        DefaultListModel<String> premiumCustomerPredictionModel=new DefaultListModel<String>();
        customerList=new CustomerList();
        for(PremiumCustomer p : customerList.getCustomerListFromName(inp))
        {
            premiumCustomerPredictionModel.addElement(p.formatedOutput());
        }
        CustomerNameOptions.setModel(premiumCustomerPredictionModel);
    }//GEN-LAST:event_CustomerNameInputKeyReleased

    private void CustomerNameOptionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerNameOptionsMouseClicked
        // TODO add your handling code here:
                // TODO add your handling code here:\
        PremiumCustomerInfo.setText("");
        new DefaultListModel<Object>();
        StyledDocument doc=PremiumCustomerInfo.getStyledDocument();
        String str=CustomerNameOptions.getSelectedValue().toString();
        //System.out.println("Debug : "+str);
        customerList =new CustomerList();
        tempCustomer=customerList.getCustomerDetailsFromName(str);
        //System.out.println(tempCustomer);
        if(tempCustomer!=null)
        {
            try
            {
                doc.insertString(0, ((PremiumCustomer)tempCustomer).getFormatedDetail(), null);
                
            }catch(Exception e)
            {
                
                   
            }
                /*detailModel.addElement(tempPremiumCustomer.getFormatedName());
            detailModel.addElement(tempPremiumCustomer.getFormatedCardNumber());
            detailModel.addElement(tempPremiumCustomer.getFormatedPoints());
            CustomerNameOptions.setModel(detailModel);*/
        }
    }//GEN-LAST:event_CustomerNameOptionsMouseClicked

    private void CustomerNameOptionsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerNameOptionsMouseExited
        // TODO add your handling code here:
       /* DefaultListModel premiumCustomerPredictionModel=new DefaultListModel();
        customerList = new CustomerList();
        Vector<PremiumCustomer> v=customerList.getList();
        System.out.println("c" + v);
        String tmp="";
        for(PremiumCustomer p : v)
        {
            tmp= p.formatedOutput();
            // wtf is wrong with this string
            premiumCustomerPredictionModel.addElement(tmp);
                    
        }
        CustomerNameOptions.setModel(premiumCustomerPredictionModel);
        // Emptying the table*/
    }//GEN-LAST:event_CustomerNameOptionsMouseExited

    private void CashInputForCashKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CashInputForCashKeyReleased
        // TODO add your handling code here:
            double price=0;
            String inp=CashInputForCash.getText();
            try
            {
                 price=Integer.parseInt(inp);
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,"Charactor not allowed","Warning",JOptionPane.ERROR_MESSAGE);
                CashInputForCash.setText("");
            }
            if(price>totalPrice&&totalPrice!=0)
                BalanceForCash.setText((new Double(price-totalPrice)).toString());
    }//GEN-LAST:event_CashInputForCashKeyReleased

    // Mine Function ... Methods for Making Life Easier(TM).
    //      prepare for new fellow
    private void blankOutForNewCustomer() {
        // Creating a new Customer
        // this is the point where all the stuff begins
        tempCustomer = new CasualCustomer();
        //tempPremiumCustomer = null;

        // blank all the things to default states
        CustomerNameInput.setText("");
        // Load All Premium Customer and display them in the
        // CustomerNameOptions list  
        PremiumCustomerInfo.setText("");
        // Set the Pane to Denote the new Customer's name
        casual=((CasualCustomer)tempCustomer).getName();
        PremiumCustomerInfo.setText(((CasualCustomer)tempCustomer).getName());

        BarCodeInput.setText("");
        ItemNameInput.setText("");
        ItemQuantityInput.setText("1");
        // Load all the Items and Display them in the 
        // ItemPrediction List
        DefaultListModel<String> itemPredictionListModel = new DefaultListModel<String>();
        // Getting the available Items list from ItemsList.yeah its a vector. Sue me.
        itemList = new ItemsList();
        int i = 0;
        for (Item tempItem : itemList.getList()) {
            itemPredictionListModel.add(i++, tempItem.getConcise());
        }
        ItemPrediction.setModel(itemPredictionListModel);
        ItemPrediction.setSelectedIndex(0);
        i=0;
        //Loading all CasualCustomer
        DefaultListModel<String> premiumCustomerPredictionModel=new DefaultListModel<String>();
        customerList = new CustomerList();
        Vector<PremiumCustomer> v=customerList.getList();
        System.out.println("c" + v);
        String tmp="";
        for(PremiumCustomer p : v)
        {
            tmp= p.formatedOutput();
            // wtf is wrong with this string
            premiumCustomerPredictionModel.addElement(tmp);
                    
        }
        CustomerNameOptions.setModel(premiumCustomerPredictionModel);
        // Emptying the table
        DefaultTableModel tModel = (DefaultTableModel) ItemsBought.getModel();
        tModel.setRowCount(0);

        // For Cash
        TotalPriceForCash.setText("-");
        CashInputForCash.setText("");
        BalanceForCash.setText("-");

        // For Cash + Points
        CashStillRequiredForPoints.setText("-");
        CashInputForPoints.setText("");
        BalanceForPoints.setText("-");

        Confirmation.setText("  Processing...");
    }
    
    // update all payment things
    private void updateSinceTotalAmountChanged()    {
        DefaultTableModel dTable = (DefaultTableModel) ItemsBought.getModel();
        totalPrice = 0;
        
        // **REAAALLLLY** Shouldn't do this, but meh. Don't have enough time.
        @SuppressWarnings("unchecked")
		Vector<Vector<Object>> dataVector = dTable.getDataVector();
        for(Vector<?> it: dataVector)  {
            totalPrice += (double) it.lastElement();
        }
                
        // this here is a quick-n-dirty hack to convert price to string...
        TotalPriceForCash.setText("" + totalPrice);         // For Cash
        
        // get points from the selected premiumCustomer
        int points = 10; // put that here
        CashStillRequiredForPoints.setText("" + (totalPrice-points));        
        
    }    
    /*    public void showListOfPremiumCustomer()
    {
        try{
        }
            Cus
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainFile mainProgram = new MainFile();
                
                // Readying for a New Customer
                mainProgram.blankOutForNewCustomer();
                
                mainProgram.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddToList;
    private javax.swing.JLabel BalanceForCash;
    private javax.swing.JLabel BalanceForPoints;
    private javax.swing.JTextField BarCodeInput;
    private javax.swing.JButton BecomePremium;
    private javax.swing.JTextField CashInputForCash;
    private javax.swing.JTextField CashInputForPoints;
    private javax.swing.JLabel CashStillRequiredForPoints;
    private javax.swing.JLabel Confirmation;
    private javax.swing.JPanel CustomerEntryPanel;
    private javax.swing.JTextField CustomerNameInput;
    private javax.swing.JList<String> CustomerNameOptions;
    private javax.swing.JButton DeleteItem;
    private javax.swing.JPanel ForCash1;
    private javax.swing.JTextField ItemNameInput;
    private javax.swing.JList<String> ItemPrediction;
    private javax.swing.JTextField ItemQuantityInput;
    private javax.swing.JPanel ItemSelectionPanel;
    private javax.swing.JTable ItemsBought;
    private javax.swing.JFrame MainWindow;
    private javax.swing.JButton NextCustomer;
    @SuppressWarnings("unused")
	private javax.swing.ButtonGroup Paymentselect;
    private javax.swing.JTextPane PremiumCustomerInfo;
    private javax.swing.JLabel TotalPriceForCash;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
